int Solution::divide(int b, int c) {
    long long bade=b;
long long chote=c;
bool neg=(bade<0)!=(chote<0);
bade=(bade<0)? -bade :bade;
chote=(chote<0) ? -chote :chote;
long long res=0;

while(bade>=chote)
{
    long long temp=chote;
    long long add=1;
    while((temp<<1)<bade)
    {
        temp=temp<<1;
        add=add<<1;
    }
    res+=add;
    bade=bade-temp;
}
if(neg)
{
    res=-res;
}
if(res>=2147483647)
res= 2147483647;
return res;
//above code is copied
// below code is mine
    // long long int A=C;
    // long long int B=D;
    
    // long long int count=0;
    // if(B==0){
    //     return INT_MAX;
    // }
    // if(A==0){
    //     return 0;
    // }
    // if(A>=0 && B>=0){
    // while(A>=B){
    //     A=A-B;
    //     count++;
    // }}
    // else if(A>=0 && B<=0){
    //     B=-B;
    //  while(A>=B){
    //     A=A-B;
    //     count++;
    // }  
    // count=-count;
        
    // }
    // else if(A<=0 && B>=0){
    //  A=-A;
    //     while(A>=B){
    //     A=A-B;
    //     count++;
    //   // cout<<count<<" ";
    // }
    
    // count=-count;
    // }
    // else if(A<=0 && B<=0){
    //     A=-A;
    //     B=-B;
    //     while(A>=B){
    //     A=A-B;
    //     count++;
    // }
    // }
    
    // if(count>=INT_MAX){
    //     return INT_MAX;
    // }
    // if(count<=INT_MIN){
    //     return INT_MIN;
    // }
    // return count;
    
    
}
