string Solution::simplifyPath(string A) {
    stack<string>a;
    int count =0;
    string t="";
    for(int i=0;i<A.length();i++){
        if(A[i]==' '){
            break;
        }
        if(count==0 && A[i]=='/'){
            count=1;
        }
        else if(count==1 && A[i]!='/'){
            t+=A[i];
            
        }
        else if(A[i]=='/'){
            if(t==".."){
            if(a.size()>0)
            
            a.pop();}
            else if(t!="."){
                //cout<<t;
                if(t!="")
                a.push(t);
            }
    
            count=1;
            t="";
        }
    }

    if(t==".."){
            if(a.size()>0)
            
            a.pop();}
    else if(t!="."){
        if(t!="")
                a.push(t);
            }
            
                if(a.empty())
{
    string p  ="/";
    return p;
}
    string ans="";
    while(a.size()>0){
    string temp = a.top();
    if(temp!=""){
    reverse(temp.begin(),temp.end());
    ans += temp;
    ans += '/';}
    a.pop();
    }
    reverse(ans.begin(),ans.end());
    //if(t!="/" && t[t.size()-1]=='/')
    //t.resize(t.size()-1);
    return ans;
    
}
