int Solution::searchInsert(vector<int> &A, int B) {
    
    if(A.size()==0){
        return 0;
    }
    if(B<=A[0]){
        return 0;
    }
    if(B>=A[A.size()-1]){
        if(B==A[A.size()-1])
        return A.size()-1;
        return A.size();
    }
    int start=0;
    int end=A.size()-1;
    int mid=(start+end)/2;
    while(start<end && A[mid]!=B){
        mid=(start+end)/2;
        if(A[mid]<B){
            start=mid+1;
        }
        else{
            end=mid-1;
        }
        
        if( start<A.size() && A[start]>=B){
            return start;
        }
        if(end >=0 &&A[end]<=B){
            if(A[end]==B){
                return end;
            }
            return end+1;
        }

        
        
    }
    
    if(A[mid]==B){
        return mid;
    }
    
    
    if(A[start]<B){
        return start+1;
    }
    
    if(A[end]>B){
        return end;
    }
    
    return mid;
    
    
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
}
